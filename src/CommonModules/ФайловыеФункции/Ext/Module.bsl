  
// + #s3 Бадальян А.Б 20250626
// Вернет Истина при успехе, 
// Ложь - если том уже заполнен (в СтрокаОшибки напишет описание), 
// бросит исключение при прочих вариантах.   
&ИзменениеИКонтроль("ДобавитьНаДискСУказаниемДлиныИмени")
Функция s3_ДобавитьНаДискСУказаниемДлиныИмени(
	МаксимальнаяДлинаПолногоПути, 
	СсылкаНаТом,
	Знач ПутьКТому,
	ДвоичныеДанные,
	ПутьКФайлуВТоме,
	ВремяИзмененияУниверсальное,
	НомерВерсии,
	ИмяБезРасширения,
	Расширение,
	РазмерФайла = 0,
	Зашифрован = Ложь,
	ДатаДляРазмещенияВТоме = Неопределено,
	ВерсияСсылка = Неопределено,
	СтрокаОшибки = "")
	
	Дата = ТекущаяДатаСеанса();
	Если ЗначениеЗаполнено(ДатаДляРазмещенияВТоме) Тогда
		Дата = ДатаДляРазмещенияВТоме;
	КонецЕсли;
	
	#Вставка 
	// + #s3 Иванов А.Б. 12.01.2021
	пЭтоТипХранилища_ОбъектноеS3 = s3_API.ЭтоТипХранилища_ОбъектноеS3(СсылкаНаТом);
	
	Если пЭтоТипХранилища_ОбъектноеS3 тогда
		
		ПутьДня = Формат(Дата, "ДФ=ггггММдд"); 
		ПутьДня = s3_API.ДобавитьКонечныйРазделительПутиS3(ПутьДня);
		ПутьКТому = s3_API.ДобавитьКонечныйРазделительПутиS3(ПутьКТому);		
		
		ВТДопПараметры = Новый Структура();
		ВТДопПараметры.Вставить("СсылкаНаТом",СсылкаНаТом);
		ВТДопПараметры.Вставить("ПутьДня",ПутьДня);
		ВТДопПараметры.Вставить("ПутьКТому",ПутьКТому);
		ВТДопПараметры.Вставить("ВерсияСсылка",ВерсияСсылка);
		ВТДопПараметры.Вставить("Расширение",Расширение);
		ВТДопПараметры.Вставить("НомерВерсии",НомерВерсии);
		
		ИмяФайлаСПутем = s3_API.ПолучитьУникальноеИмяСПутем(ВТДопПараметры);	
		
		ПолноеИмяФайлаСПутем = ПутьКТому + ИмяФайлаСПутем;
		Попытка
			s3_API.ДобавитьФайлНаДискS3(СсылкаНаТом, ДвоичныеДанные, ПолноеИмяФайлаСПутем);
			
			ПутьКФайлуВТоме = ИмяФайлаСПутем;
			
			Возврат Истина;
		Исключение
			СтрокаОшибки = "Ошибка отправки на S3 > " + ОписаниеОшибки();
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	// - #s3 Иванов А.Б. 12.01.2021
	#КонецВставки
	
	ПутьДня = Формат(Дата, "ДФ=ггггММдд") + ПолучитьРазделительПути();
	
	// Добавляем слэш в конце, если его нет
	ПутьКТому = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
		ПутьКТому, ОбщегоНазначенияДокументооборотПовтИсп.ТипПлатформыСервера());
	
	ДопустимаяДлинаИмениФайла = МаксимальнаяДлинаПолногоПути - СтрДлина(ПутьКТому)
		- СтрДлина(Расширение) - СтрДлина(Строка(НомерВерсии)) - СтрДлина(ПутьДня);
		
	Если Зашифрован Тогда
		ДопустимаяДлинаИмениФайла = ДопустимаяДлинаИмениФайла - 4;
	КонецЕсли;	
		
	ИмяБезРасширенияПроверенное = СокрЛП(ИмяБезРасширения);
	ИмяБезРасширенияПроверенное = 
		ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяБезРасширенияПроверенное, "");
		
	ИмяБезРасширенияУрезанное = ИмяБезРасширенияПроверенное;	
	
	СлучайнаяДобавкаИмениФайла = ПолучитьСлучайнуюДобавкуИмениФайла();
	ДлинаПрибавки = СтрДлина(СлучайнаяДобавкаИмениФайла) + 1;
	ДобавитьУникальныйИдентификатор = Истина;
	Если ДлинаПрибавки >= ДопустимаяДлинаИмениФайла Тогда
		ДобавитьУникальныйИдентификатор = Ложь;
	Иначе	
		ДопустимаяДлинаИмениФайла = ДопустимаяДлинаИмениФайла - ДлинаПрибавки;
	КонецЕсли;	
	
	Если СтрДлина(ИмяБезРасширенияУрезанное) > ДопустимаяДлинаИмениФайла Тогда
		ИмяБезРасширенияУрезанное = Лев(ИмяБезРасширенияУрезанное, ДопустимаяДлинаИмениФайла);
	КонецЕсли;
	Если ДобавитьУникальныйИдентификатор Тогда
		ИмяБезРасширенияУрезанное = ИмяБезРасширенияУрезанное + "_" + СлучайнаяДобавкаИмениФайла;
	КонецЕсли;	
	
	// Имя файла для хранения на диске формировать следующим образом
	// - имя файла.номер версии.расширение файла
	Если ПустаяСтрока(НомерВерсии) Тогда
		ИмяФайла = ИмяБезРасширенияУрезанное + "." + Расширение;
	Иначе
		ИмяФайла = ИмяБезРасширенияУрезанное + "." + НомерВерсии + "." + Расширение;
	КонецЕсли;
	
	Если Зашифрован Тогда
		ИмяФайла = ИмяФайла + "." + "p7m";
	КонецЕсли;	
	
	// Если МаксимальныйРазмер = 0 - нет ограничения на размер файлов на томе
	Если СсылкаНаТом.МаксимальныйРазмер <> 0 Тогда
		ТекущийРазмерВБайтах = ФайловыеФункцииПовтИсп.ПодсчитатьРазмерФайловНаТоме(СсылкаНаТом.Ссылка); 
		НовыйРазмерВБайтах = ТекущийРазмерВБайтах + РазмерФайла;
		НовыйРазмер = НовыйРазмерВБайтах / (1024 * 1024);
		
		Если НовыйРазмер > СсылкаНаТом.МаксимальныйРазмер Тогда
			СтрокаОшибки 
				= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Превышен максимальный размер тома (%1 Мб)!'"),
				СсылкаНаТом.МаксимальныйРазмер);
			Возврат	Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ПутьКТому = ПутьКТому + ПутьДня;
	
	ИмяФайлаСПутем = ФайловыеФункцииКлиентСервер.ПолучитьУникальноеИмяСПутем(
		ПутьКТому, ИмяФайла, ОбщегоНазначенияДокументооборотПовтИсп.ТипПлатформыСервера());
	
	Если ПустаяСтрока(ИмяФайлаСПутем) Тогда // не смогли добавить файл
		
		УникальныйИдентификатор = Новый УникальныйИдентификатор;
		УникальныйИдентификаторСтрока = Строка(УникальныйИдентификатор);
		ИмяФайла = СтрЗаменить(ИмяФайла, ИмяБезРасширенияУрезанное, УникальныйИдентификаторСтрока);
		// повторно получаем
		ИмяФайлаСПутем = ФайловыеФункцииКлиентСервер.ПолучитьУникальноеИмяСПутем(
			ПутьКТому, ИмяФайла, ОбщегоНазначенияДокументооборотПовтИсп.ТипПлатформыСервера());
		Если ПустаяСтрока(ИмяФайлаСПутем) Тогда // не смогли добавить файл
			
			СтрокаОшибки 
				= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось получить полное имя файла для размещения на томе (файл ""%1"").'"),
				ИмяФайла);
			
			ВызватьИсключение(СтрокаОшибки);
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	ПолноеИмяФайлаСПутем = ПутьКТому + ИмяФайлаСПутем;
	
	Если ТипЗнч(ДвоичныеДанные) = Тип("ДвоичныеДанные") Тогда
		ДвоичныеДанные.Записать(ПолноеИмяФайлаСПутем);
	ИначеЕсли ТипЗнч(ДвоичныеДанные) = Тип("Строка") Тогда // считаем, что иначе это путь к файлу на диске
		КопироватьФайл(ДвоичныеДанные, ПолноеИмяФайлаСПутем);
	Иначе
		СтрокаИсключения = НСтр("ru = 'Неверный тип данных для добавления на том'");
		ВызватьИсключение(СтрокаИсключения);
	КонецЕсли;
	
	// Установим время изменения файла таким, как оно стоит в текущей версии
	ФайлНаДиске = Новый Файл(ПолноеИмяФайлаСПутем);
	ФайлНаДиске.УстановитьУниверсальноеВремяИзменения(ВремяИзмененияУниверсальное);
	ФайлНаДиске.УстановитьТолькоЧтение(Истина);
	
	ПутьКФайлуВТоме = ПутьДня + ИмяФайлаСПутем;
	
	Возврат Истина;
		
КонецФункции
// - #s3 Бадальян А.Б 20250626

// + #s3 Иванов А.Б. 12.01.2021
&ИзменениеИКонтроль("ПолныйПутьТома")
Функция s3_ПолныйПутьТома(СсылкаНаТом)
	
	#Вставка
	// + #s3 Иванов А.Б. 12.01.2021
	Если s3_API.ЭтоТипХранилища_ОбъектноеS3(СсылкаНаТом) Тогда
		Возврат s3_API.ПолныйПутьТома(СсылкаНаТом);
	КонецЕсли;
	// - #s3 Иванов А.Б. 12.01.2021
	#КонецВставки
	ТипПлатформыСервера = ТипПлатформыСервера();	
	
	Если ТипПлатформыСервера = ТипПлатформы.Windows_x86 ИЛИ ТипПлатформыСервера = ТипПлатформы.Windows_x86_64 Тогда
		Возврат СсылкаНаТом.ПолныйПутьWindows;
	Иначе	
		Возврат СсылкаНаТом.ПолныйПутьLinux;
	КонецЕсли;
	
КонецФункции // - #s3 Иванов А.Б. 12.01.2021    
// - #s3 Иванов А.Б. 12.01.2021
